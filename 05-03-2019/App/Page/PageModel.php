<?php
namespace App\Page;
use App\Config;

/**
 * 
 */
class PageModel
{
	private $pageFile;


/*
|--------------------------------------------------------------------------
| Создание обьекта страницы и подготовка абсолютного маршрута
|--------------------------------------------------------------------------
| Сохраняет путь к страницам в переменную
| 
|
*/	
	function __construct(){
		$this->pageFile = Config::$pathToStorage . 'pages/';
	}

/*
|--------------------------------------------------------------------------
| Чтение подготовленной страницы 
|--------------------------------------------------------------------------
| Читает страницу и возвращает ее содержимое
| 
|
*/	
	function getContentPageFromFile ($fileName){
		// включаем буфер
		ob_start();
		include ($this->pageFile . $fileName); 

		// сохраняем всё что есть в буфере в переменную $content
		$content = ob_get_contents();
		
		// отключаем и очищаем буфер
		ob_end_clean();

		return $content;
	}



/*
|--------------------------------------------------------------------------
| Взять страницу по имени
|--------------------------------------------------------------------------
| Анализирует, какую страницу хочет увидеть пользователь
| Читает ее содержимое из файла и возвращает ее контроллеру
|
*/	
	
	function getPage($name){

		// ToDo: Переписать, с попыткой включитьф айл- еслиф айла нет - вернуть 404
		// HowTo:
		// 0. Создать файл 404.php
		// 1. проверить на наличие файла 
		// 2. Если файл есть,включить его
		// 3. Если файла нет - вернуть 404.php
		$fileName = $name.'.php';	

		if(file_exists($this->pageFile . $fileName))			
			return $this->getContentPageFromFile($fileName);
		else
			return $this->getContentPageFromFile('404.php');
	}

	

	

}